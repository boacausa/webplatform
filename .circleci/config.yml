# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
       - image: circleci/ruby:3.0.3-node-browsers
         environment:
           BUNDLER_VERSION: 2.0.1
           RAILS_ENV: test
           CC_TEST_REPORTER_ID: cbd5dbe286144902877051aa0171c72a1d80942efaca7a9bba57670e130c1327
           POSTGRES_USER: circleci-demo-go

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
       - image: circleci/postgres:9.6-alpine
         environment:
           POSTGRES_USER: circleci-demo-go
           POSTGRES_DB: boacausa_test

    working_directory: ~/webplatform

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "Gemfile.lock" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}

      - run:
          name: install dependencies
          command: |
            sudo gem update --system
            sudo gem uninstall bundler
            sudo rm /usr/local/bin/bundle
            sudo rm /usr/local/bin/bundler
            sudo gem install bundler
            bundle install --jobs=4 --retry=3 --path vendor/bundle
            yarn install --frozen-lockfile

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}
      - save_cache:
          name: Save Yarn Package Cache
          key: yarn-packages-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn

      # Database setup
      - run: bundle exec rake db:create
      - run: bundle exec rake db:schema:load

      # Codeclimate coverage reporter
      - run:
          name: Install CodeClimate test coverage reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
            ./cc-test-reporter before-build

      # run tests!
      - run:
          name: run rails tests
          command: |
            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)"
            bundle exec rspec spec --format progress --format RspecJunitFormatter --out /tmp/test-results/rspec.xml

      - run:
          name: run js` tests
          command: |
            npm test
          environment:
            JEST_JUNIT_OUTPUT: "/tmp/test-results/jest.xml"

      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results

      - run:
          name: Upload test coverage report to CodeClimate
          command: ./cc-test-reporter after-build --exit-code $?
